#!/bin/bash

# Extract archives - use: extract <file>
# Credits to http://dotfiles.org/~pseup/.bashrc
function extract() {
	if [ -f $1 ] ; then
		case $1 in
			*.tar.bz2) tar xjf $1 ;;
			*.tar.gz) tar xzf $1 ;;
			*.bz2) bunzip2 $1 ;;
			*.rar) rar x $1 ;;
			*.gz) gunzip $1 ;;
			*.tar) tar xf $1 ;;
			*.tbz2) tar xjf $1 ;;
			*.tgz) tar xzf $1 ;;
			*.zip) unzip $1 ;;
			*.Z) uncompress $1 ;;
			*.7z) 7z x $1 ;;
			*) echo "'$1' cannot be extracted via extract()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

function dsh() {
	search=$1
	shell=${2-bash}
	containers=$(docker container ls 2> /dev/null)
	[ $? -ne 0 ] && echo "Error: docker does not seem to be running" && return 1
	count=$(($(echo "$containers" | tail -n+2 | wc -l)))
	[ $count -eq 0 ] && echo "Error: no container seems to be running" && return 1
	[ $count -eq 1 ] && [ -z $search ] && search=.
	[ -z $search ] && echo "Usage: dsh [search term if multiple containers running]" && echo && echo "$containers" && return 1
	count=$(($(echo "$containers" | tail -n+2 | grep $search | wc -l)))
	[ $count -ne 1 ] && echo "Error: no or multiple containers found for \"$search\"" && echo && echo "$containers" && return 1
	docker exec -it $(echo "$containers" | tail -n+2 | grep $search | awk '{print $1}') $shell 2> /dev/null
	[ $? -ne 0 ] && echo "Error: make sure $shell exists" && return 1
}

function venv() {
	if [ "$VIRTUAL_ENV" != "" ]; then
		deactivate
	elif [ -d ".venv" ]; then
		source ./.venv/bin/activate
		if [ -f uv.lock ]; then
			uv sync --frozen
		fi
	else
		python -m venv ./.venv
		source ./.venv/bin/activate
		if [ -f uv.lock ]; then
			uv sync --frozen
		elif [ -f pyproject.toml ]; then
			uv sync
		elif [ -f requirements.txt ]; then
			pip install -r requirements.txt
		fi
	fi
}

# Linux specific
if [[ "$(uname -s)" == "Linux" ]]; then
  source $HOME/dotfiles/.functions-linux 2> /dev/null
fi

# Mac specific
if [[ "$SYSTEM" == "MacOS" ]]; then
  source $HOME/dotfiles/.functions-macos 2> /dev/null
fi

# Cygwin specific
if [[ "$SYSTEM" == "cygwin" ]]; then
  source $HOME/dotfiles/.functions-cygwin 2> /dev/null
fi

# Local function
if [ -f ~/.functions-local ]; then
  source ~/.functions-local 2> /dev/null
fi

